############################################
################## GLOBAL ##################
############################################
global:
  namespace: "armonik"
  registry: "dockerhubaneo"
  security:
    allowInsecureImages: true

############################################
### ARMONIK APPLICATION CONFIGURATION #####
############################################
control-plane:
  replicaCount: 1
  enabled: true
  nodeSelector:
    service: control-plane
  tolerations:
    - effect: NoSchedule
      key: service
      operator: Equal
      value: control-plane
compute-plane:
  enabled: true
  computePlane.partition.default:
    replicas: 1
    nodeSelector:
      service: workers
    tolerations:
      - effect: NoSchedule
        key: service
        operator: Equal
        value: workers
  computePlane.partition.stream:
    replicas: 1
    nodeSelector:
      service: workers
    tolerations:
      - effect: NoSchedule
        key: service
        operator: Equal
        value: workers
  computePlane.partition.htcmock:
    replicas: 1
    nodeSelector:
      service: workers
    tolerations:
      - effect: NoSchedule
        key: service
        operator: Equal
        value: workers
  computePlane.partition.bench:
    replicas: 1
    nodeSelector:
      service: workers
    tolerations:
      - effect: NoSchedule
        key: service
        operator: Equal
        value: workers

############################################
############### DEPENDENCIES ###############
############################################

################## ENICONFIG ###############
eniconfig:
  enabled: false

################## MINIO-S3 ################
minio:
  enabled: false

################## REDIS ##################
redis:
  enabled: true
  useStatefulSet: true
  replica:
    persistence:
      enabled: false
    autoscaling:
      enabled: true
      targetCPU: "80"
      targetMemory: "80"
  fullnameOverride: "redis"
  tls:
    enabled: false
    autoGenerated: false
    authClients: no
    pemChainIncluded: true
    # existingSecret: redis-crt
    # certFilename: "tls-combined.pem"
    # certKeyFilename: "tls.key"
    # certCAFilename: "ca.crt"
  usernames:
    admin: admin
  master:
    persistence:
      enabled: false
    containerPorts:
      redis: 6379
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

################## ACTIVEMQ ##################
activemq:
  enabled: true
  replicas: 1
  fullnameOverride: "activemq"

################## MONGODB ##################
mongodb:
  enabled: true
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  architecture: "replicaset"
  fullnameOverride: "mongodb"
  useStatefulSet: true
  persistence:
    enabled: false
  #existingConfigmap: "mongodb-armonik-scripts"
  nodeSelector:
    service: state-database
  tolerations:
    - effect: NoSchedule
      key: service
      operator: Equal
      value: state-database
  arbiter:
    nodeSelector:
      service: state-database
    tolerations:
      - effect: NoSchedule
        key: service
        operator: Equal
        value: state-database
  tls:
    enabled: false
    mode: allowTLS
    autoGenerated: true
    replicaset:
      existingSecret: mongodb-crt

################## CHAOS-MASH ##################
chaos-mesh:
  enabled: false

################## KEDA ##################
keda:
  enabled: false
  # certificates:
  #   certManager:
  #     enabled: false
  #     issuer: {"generate":false,"group":"cert-manager.io ","kind":"ClusterIssuer","name":"armonik-selfsigned-issuer"}
  nodeSelector:
    service: monitoring
  tolerations:
    - effect: NoSchedule
      key: service
      operator: Equal
      value: monitoring

################## NODE-EXPORTER ##################
kube-state-metrics:
  enabled: false
  fullnameOverride: "kube-state-metrics"

################## METRICS-SERVER ##################
metrics-server:
  enabled: false
  fullnameOverride: "metrics-server"
  #nodeSelector: {"monitoring"}

################## CLUSTER-AUTOSCALER ##################
cluster-autoscaler:
  enabled: false

################## CERT-MANAGER ##################
cert-manager:
  enabled: false
  installCRDs: true
  fullnameOverride: "cert-manager"

################## GRAFANA ##################
grafana:
  enabled: true
  serviceMonitor:
    enabled: true
  nodeSelector:
    service: monitoring
  tolerations:
    - effect: NoSchedule
      key: service
      operator: Equal
      value: monitoring
  fullnameOverride: "grafana"
  # ingress:
  #   enabled: true
  #   hosts: 
  #   - grafana.local
  grafana.ini:
      server:
        domain: localhost
        root_url: http://grafana.{{ .Release.Namespace }}.svc.cluster.local
        serve_from_sub_path: false
      anonymous:
        enabled: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  sidecar:
    dashboards:
      enabled: true
      searchNamespace: '{{ .Release.Namespace }}'
      label: grafana_dashboard
    datasources:
      enabled: true
      searchNamespace: '{{ .Release.Namespace }}'
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        orgId: 1
        url: http://prometheus-operated.{{ .Release.Namespace }}.svc.cluster.local:9090
        isDefault: true
        jsonData:
          tlsSkipVerify: true
        version: 1

################## FLUENT-BIT ##################
fluent-bit:
  enabled: true
  fullnameOverride: "fluent-bit"
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  # ingress:
  #   enabled: true
  #   selfSigned: true
  #   tls: true
  config:
    filters: |
      [FILTER]
          Name                kubernetes
          Match               *
          Kube_URL            https://kubernetes.default.svc:443
          Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
          Kube_Tag_Prefix     kube.var.log.containers.
          Merge_Log           On
          Merge_Log_Key       log
          Merge_Log_Trim      On
          Merge_Parser        json
          Keep_Log            Off
          Annotations         On
          Labels              On
          K8S-Logging.Parser  On
          K8S-Logging.Exclude Off
          Buffer_Size         0
      [FILTER]
          Name                    nest
          Match                   *
          Operation               lift
          Nested_under            kubernetes
          Add_prefix              kubernetes_
      [FILTER]
          Name                    nest
          Match                   *
          Operation               lift
          Nested_under            log
      [FILTER]
          Name                    modify
          Match                   *
          Condition               Key_exists log
          Rename                  log @m
          Add                     sourcetype renamelog
    inputs: |
      [INPUT]
          Name               tail
          Tag                kube.*
          Path               /var/log/containers/control-plane*.log, /var/log/containers/compute-plane*.log
          Parser             cri
          Docker_Mode        On
          Buffer_Chunk_Size  512KB
          Buffer_Max_Size    5M
          Rotate_Wait        30
          Mem_Buf_Limit      30MB
          Skip_Long_Lines    Off
          Refresh_Interval   10
          READ_FROM_HEAD     On
      [INPUT]
          Name               tail
          Tag                application.*
          Path               /var/log/containers/control-plane*.log, /var/log/containers/compute-plane*.log, /var/log/containers/ingress*.log, /var/log/containers/mongodb*.log, /var/log/containers/keda*.log
          Parser             cri
          Docker_Mode        On
          Buffer_Chunk_Size  512KB
          Buffer_Max_Size    5M
          Rotate_Wait        30
          Mem_Buf_Limit      30MB
          Skip_Long_Lines    Off
          Refresh_Interval   10
          READ_FROM_HEAD     On
      [INPUT]
          Name               tail
          Tag                s3-application.*
          Path               /var/log/containers/control-plane*.log, /var/log/containers/compute-plane*.log, /var/log/containers/ingress*.log, /var/log/containers/mongodb*.log, /var/log/containers/keda*.log
          Parser             cri
          Docker_Mode        On
          Buffer_Chunk_Size  512KB
          Buffer_Max_Size    5M
          Rotate_Wait        30
          Mem_Buf_Limit      30MB
          Skip_Long_Lines    Off
          Refresh_Interval   10
          READ_FROM_HEAD     On
    outputs: |
      [OUTPUT]
          Name                    http
          Match                   kube.*
          Host                    seq.armonik.svc.cluster.local
          Port                    5341
          URI                     /api/events/raw?clef
          Header                  ContentType application/vnd.serilog.clef
          Format                  json_lines
          json_date_key           @t
          json_date_format        iso8601
    customParsers: |
      [PARSER]
          Name   apache
          Format regex
          Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z
      [PARSER]
          Name   apache2
          Format regex
          Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z
      [PARSER]
          Name   apache_error
          Format regex
          Regex  ^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<message>.*)$
      [PARSER]
          Name   nginx
          Format regex
          Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z
      [PARSER]
          Name   json
          Format json
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z
      [PARSER]
          Name        docker
          Format      json
          Time_Key    time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
          Time_Keep   On
      [PARSER]
          Name cri
          Format regex
          Regex ^(?:(?<time>[^\s]+)\s+(?<stream>\w+)\s+(?<logtag>\w+)\s+)?(?<log>\{.*\})$
          Time_Key time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
          Time_Keep On
          Decode_Field_As json log
      [PARSER]
          Name        syslog
          Format      regex
          Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
          Time_Key    time
          Time_Format %b %d %H:%M:%S

################## SEQ ##################
seq:
  enabled: true
  fullnameOverride: "seq"
  persistence:
    enabled: false
  nodeSelector:
    service: monitoring
  tolerations:
    - effect: NoSchedule
      key: service
      operator: Equal
      value: monitoring

################## INGRESS ##################
ingress:
  enabled: true
  nodeSelector:
    service: control-plane
  tolerations:
    - effect: NoSchedule
      key: service
      operator: Equal
      value: control-plane
  ingress:
    type: LoadBalancer

################## PROMETHEUS ##################
prometheus:
  enabled: false
  fullnameOverride: "prometheus"
  alertmanager:
    enabled: false
  operator:
    nodeSelector:
      service: monitoring
    tolerations:
      - effect: NoSchedule
        key: service
        operator: Equal
        value: monitoring
  prometheus:
    nodeSelector:
      service: monitoring
    tolerations:
      - effect: NoSchedule
        key: service
        operator: Equal
        value: monitoring
    resourcesPreset: medium
    scrapeInterval: 10s
    evaluationInterval: 30s
    additionalScrapeConfigs:
      enabled: true
      type: internal
      internal:
        jobList:
          - job_name: "metrics-exporter"
            static_configs:
              - targets: ["metrics-exporter.{{ .Release.Namespace }}.svc.cluster.local:9419"]
                labels:
                  namespace: "armonik"

          - job_name: 'kube-state-metrics'
            static_configs:
              - targets: ['kube-state-metrics.{{ .Release.Namespace }}.svc.cluster.local:8080']
                  
          - job_name: "mongodb-metrics-exporter"
            static_configs: 
              - targets: ["mongodb.{{ .Release.Namespace }}.svc.cluster.local:27017"]
                labels:
                  namespace: "armonik"
            metrics_path: /metrics
            scheme: http

          - job_name: "kubernetes-apiservers"
            kubernetes_sd_configs:
              - role: endpoints
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            relabel_configs:
              - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
                action: keep
                regex: default;kubernetes;https
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: kubernetes_pod_name
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: kubernetes_pod_node_name

          - job_name: "kubernetes-pods"
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                action: replace
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: $1:$2
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: kubernetes_pod_name
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: kubernetes_pod_node_name

          - job_name: "kubernetes-cadvisor"
            kubernetes_sd_configs:
              - role: node
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            metrics_path: /metrics/cadvisor
            relabel_configs:
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)

          - job_name: "kubernetes-resource"
            kubernetes_sd_configs:
              - role: node
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            metrics_path: /metrics/resource
            relabel_configs:
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)

          - job_name: "kubernetes-probes"
            kubernetes_sd_configs:
              - role: node
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            metrics_path: /metrics/probes
            relabel_configs:
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)

          - job_name: 'metrics-control-plane' 
            kubernetes_sd_configs:
              - role: pod 
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_container_port_number]
                action: keep
                regex: "1081" 
              - source_labels: [__meta_kubernetes_pod_label_app]
                action: keep
                regex: "armonik"
              - source_labels: [__meta_kubernetes_pod_label_service]
                action: keep
                regex: "control-plane"
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: kubernetes_pod_node_name
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: kubernetes_pod_name

          - job_name: 'metrics-polling-agent' 
            kubernetes_sd_configs:
              - role: pod 
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_container_port_number]
                action: keep
                regex: "1080" 
              - source_labels: [__meta_kubernetes_pod_label_app]
                action: keep
                regex: "armonik"
              - source_labels: [__meta_kubernetes_pod_label_service]
                action: keep
                regex: "compute-plane"
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: kubernetes_pod_node_name
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: kubernetes_pod_name

############################################