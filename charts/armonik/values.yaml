############################################
################## GLOBAL ##################
############################################
global:
  # version:
  #   armonikCore: "0.31.2"
  #   armonikPollingagent: "0.31.2"
  #   armonikGui: "0.13.3"
  #   nginx: "1.27.4-alpine-slim"
  image:
    pullPolicy: IfNotPresent # FOR KEDA IMAGES
    registry: "" # FOR KEDA IMAGES
  imageRegistry: "" # FOR BITNAMI IMAGES AND ARMONIK IMAGES
  #imagePullSecrets: [{"name": "secret"}] # FOR BITNAMI IMAGES AND ARMONIK IMAGES
  dependencies:
    controlPlane: true
    computePlane: true  
    ingress: true
    activemq: false
    redis: true
    mongodb: true
    kubePrometheus: true
    keda: false
    rabbitmq: true
    grafana: true
    fluentBit: true
    seq: true
    certManager: true
  environment:
    name: "local"
    description: "Armonik environment"

############################################
### ARMONIK APPLICATION CONFIGURATION #####
############################################
# control-plane: []
# compute-plane: []

############################################
############### DEPENDENCIES ###############
############################################

################# RABBITMQ #################
rabbitmq:
  fullnameOverride: "rabbitmq"
  auth:
    username: "admin"
    password: "admin"
    # tls:
    #   enabled: false
    #   autoGenerated: false
  #esourcesPreset: nano
  persistence:
    enabled: false
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

################## REDIS ##################
redis:
  useStatefulSet: true
  replica:
    replicaCount: 1
    persistence:
      enabled: false
    autoscaling:
      enabled: false
      targetCPU: "80"
      targetMemory: "80"
  fullnameOverride: "redis"
  tls: #BUG CHART https://github.com/bitnami/charts/issues/29616
    enabled: false
    autoGenerated: false
    authClients: false
    # existingSecret: redis-crt
    # certFilename: "tls-combined.pem"
    # certKeyFilename: "tls.key"
    # certCAFilename: "ca.crt"
  usernames:
    admin: admin
  master:
    resourcesPreset: nano
    persistence:
      enabled: false
    containerPorts:
      redis: 6379
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

################## ACTIVEMQ ##################
activemq:
  replicas: 1
  fullnameOverride: "activemq"

################## MONGODB ##################
mongodb:
  replicas: 2
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  architecture: "replicaset"
  fullnameOverride: "mongodb"
  useStatefulSet: true
  replicaCount: 1
  persistence:
    enabled: false
  #existingConfigmap: "mongodb-armonik-scripts"
  tls:
    enabled: false
    mode: allowTLS
    autoGenerated: true
    replicaset:
      existingSecret: mongodb-crt

################## KEDA ##################
keda:
  crds:
    install: true
  prometheus:
    metricServer:
      enabled: true
      serviceMonitor:
        enabled: true
  certificates:
    certManager:
      enabled: false
      issuer: {"generate":false,"group":"cert-manager.io","kind":"ClusterIssuer","name":"armonik-selfsigned-issuer"}
  image:
    pullPolicy: IfNotPresent
  #imagePullSecrets: []

################## CERT-MANAGER ##################
cert-manager:
  installCRDs: true
  fullnameOverride: "cert-manager"
  prometheus:
    servicemonitor:
      enabled : true

################## GRAFANA ##################
grafana:
  serviceMonitor:
    enabled: true
  fullnameOverride: "grafana"
  grafana.ini:
    server:
      domain: grafana.local
      root_url: http://grafana.{{ .Release.Namespace }}.svc.cluster.local
      serve_from_sub_path: true
    anonymous:
      enabled: true
    auth.anonymous:
      enabled: true
  sidecar:
    dashboards:
      enabled: true
      folderAnnotation: "grafana_dashboard_folder"
      searchNamespace: "armonik"
      label: "grafana_dashboard"
    datasources:
      enabled: true

################## FLUENT-BIT ##################
fluent-bit:
  fullnameOverride: "fluent-bit"
  daemonset:
    enabled: true
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  extraVolumes: |
    - name: runlogjournal
      hostPath:
        path: /run/log/journal
        type: ''
    - name: dmesg
      hostPath:
        path: /var/log/dmesg
        type: ''
  extraVolumeMounts: |
    - name: runlogjournal
      readOnly: true
      mountPath: /run/log/journal
      mountPropagation: None
    - name: dmesg
      readOnly: true
      mountPath: /var/log/dmesg
      mountPropagation: None
  config:
    filters: |
      [FILTER]
          Name                kubernetes
          Match               *
          Kube_URL            https://kubernetes.default.svc:443
          Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
          Kube_Tag_Prefix     kube.var.log.containers.
          Merge_Log           On
          Merge_Log_Key       log
          Merge_Log_Trim      On
          Merge_Parser        json
          Keep_Log            Off
          Annotations         On
          Labels              On
          K8S-Logging.Parser  On
          K8S-Logging.Exclude Off
          Buffer_Size         0
      [FILTER]
          Name                    parser
          Match                   *
          key_name                message
          Parser                  json
      [FILTER]
          Name                    nest
          Match                   *
          Operation               lift
          Nested_under            kubernetes
          Add_prefix              kubernetes_
      [FILTER]
          Name                    nest
          Match                   *
          Operation               lift
          Nested_under            message
      [FILTER]
          Name                    modify
          Match                   *
          Condition               Key_exists message
          Rename                  message @m
          Add                     sourcetype renamelog
    inputs: |
      [INPUT]
          Name               tail
          Tag                kube.*
          Path               /var/log/containers/control-plane*.log, /var/log/containers/compute-plane*.log
          Parser             cri
          Docker_Mode        On
          Buffer_Chunk_Size  512KB
          Buffer_Max_Size    5M
          Rotate_Wait        30
          Mem_Buf_Limit      30MB
          Skip_Long_Lines    Off
          Refresh_Interval   10
          READ_FROM_HEAD     On
      [INPUT]
          Name               tail
          Tag                application.*
          Path               /var/log/containers/control-plane*.log, /var/log/containers/compute-plane*.log, /var/log/containers/ingress*.log, /var/log/containers/mongodb*.log, /var/log/containers/keda*.log
          Parser             cri
          Docker_Mode        On
          Buffer_Chunk_Size  512KB
          Buffer_Max_Size    5M
          Rotate_Wait        30
          Mem_Buf_Limit      30MB
          Skip_Long_Lines    Off
          Refresh_Interval   10
          READ_FROM_HEAD     On
      [INPUT]
          Name               tail
          Tag                s3-application.*
          Path               /var/log/containers/control-plane*.log, /var/log/containers/compute-plane*.log, /var/log/containers/ingress*.log, /var/log/containers/mongodb*.log, /var/log/containers/keda*.log
          Parser             cri
          Docker_Mode        On
          Buffer_Chunk_Size  512KB
          Buffer_Max_Size    5M
          Rotate_Wait        30
          Mem_Buf_Limit      30MB
          Skip_Long_Lines    Off
          Refresh_Interval   10
          READ_FROM_HEAD     On
    outputs: |
      [OUTPUT]
          Name                    http
          Match                   kube.*
          Host                    seq.armonik.svc.cluster.local
          Port                    5341
          URI                     /api/events/raw?clef
          Header                  ContentType application/vnd.serilog.clef
          Format                  json_lines
          json_date_key           @t
          json_date_format        iso8601
    customParsers: |
      [PARSER]
          Name   apache
          Format regex
          Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z
      [PARSER]
          Name   apache2
          Format regex
          Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z
      [PARSER]
          Name   apache_error
          Format regex
          Regex  ^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<message>.*)$
      [PARSER]
          Name   nginx
          Format regex
          Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z
      [PARSER]
          Name   json
          Format json
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z
      [PARSER]
          Name        docker
          Format      json
          Time_Key    time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
          Time_Keep   On
      [PARSER]
          Name cri
          Format regex
          Regex ^(?:(?<time>[^\s]+)\s+(?<stream>\w+)\s+(?<logtag>\w+)\s+)?(?<message>\{.*\})$
          Time_Key time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
          Time_Keep On
      [PARSER]
          Name        syslog
          Format      regex
          Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
          Time_Key    time
          Time_Format %b %d %H:%M:%S

################## SEQ ##################
seq:
  fullnameOverride: "seq"
  persistence:
    enabled: false
  image:
    pullPolicy: IfNotPresent
  #   repository: $REPO-NAME/datalust/seq
  # imagePullSecrets: []

################## INGRESS ##################
ingress:
  ingress:
    type: LoadBalancer

################## PROMETHEUS ##################
kube-prometheus:
  operator.image.registry: ""
  fullnameOverride: "prometheus"
  alertmanager:
    enabled: false
  blackboxExporter:
    enabled: false
  prometheus:
    scrapeInterval: 10s
    evaluationInterval: 30s
    additionalScrapeConfigs:
      enabled: true
      type: external
      external:
        name: additional-scrape-configs
        key: prometheus-additional.yaml

############################################
