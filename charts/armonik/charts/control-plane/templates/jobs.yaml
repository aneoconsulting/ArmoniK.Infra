apiVersion: batch/v1
kind: Job
metadata:
  name: partitions-in-database
  labels:
    app: armonik
    service: partitions-in-database
    type: monitoring
spec:
  backoffLimit: 5
  completionMode: NonIndexed
  completions: 1
  manualSelector: false
  parallelism: 1
  suspend: false
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: armonik
        job-name: partitions-in-database
        service: partitions-in-database
        type: monitoring
      name: partitions-in-database
    spec:
      automountServiceAccountToken: true
      containers:
      - name: job-partitions-in-database
        {{- $registry := .Values.global.imageRegistry | default .Values.image.registry }}
        {{- if $registry }}
        image: "{{ $registry }}/{{ .Values.imageJob.repository }}/{{ .Values.imageJob.name }}:{{ .Values.imageJob.tag | default .Chart.AppVersion }}"
        {{- else }}
        image: "{{ .Values.imageJob.repository }}/{{ .Values.imageJob.name }}:{{ .Values.imageJob.tag | default .Chart.AppVersion }}"
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/script/init-db.sh"]
        env:
        - name: MongoDB__Password
          valueFrom:
            secretKeyRef:
              key: mongodb-root-password
              name: mongodb
              optional: false
        envFrom:
          {{- if .Values.envFrom.secretRef }}
          {{- range .Values.envFrom.secretRef }}
          - secretRef:
              name: {{ . }}
              optional: false
          {{- end }}
          {{- end }}
          {{- if .Values.envFrom.configMapRef }}
          {{- range .Values.envFrom.configMapRef }}
          - configMapRef:
              name: {{ . }}
              optional: false
          {{- end }}
          {{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          # - name: mongodb-crt
          #   mountPropagation: None
          #   mountPath: /mongodb/certs/
          - name: script
            mountPath: "/script"
      {{- $imagePullSecrets := .Values.global.imagePullSecrets | default .Values.imagePullSecrets }}
      {{- if $imagePullSecrets }}
      {{- with $imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      dnsPolicy: ClusterFirst
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 30
      enableServiceLinks: true
      restartPolicy: OnFailure
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }} 
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      volumes:
      - name: mongodb-crt
        secret:
          defaultMode: 420
          optional: false
          secretName: mongodb-ca
      - name: script
        configMap:
          name: jobs-configmap
          defaultMode: 0500
