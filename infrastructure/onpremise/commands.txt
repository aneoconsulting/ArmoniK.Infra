K3S:
----
1. deploy ec2 instance as master with security group having inboud rules: ssh-port=22 and k3s-port=6443 and nfs-port=2049
2. deploy 3 ec2 instances as workers with security group having inboud rules: ssh-port=22
3. on master: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--tls-san <public-ip-of-master>" sh -
4. on worker: curl -sfL https://get.k3s.io | K3S_URL=https://<public-ip-of-master>:6443 K3S_TOKEN=<token> sh -
such as: token = sudo cat /var/lib/rancher/k3s/server/node-token
5. outside cluster:
    * scp -i ~/.ssh/k3s.pem ec2-user@<public-ip-of-master>:/etc/rancher/k3s/k3s.yaml ~/.kube/config
6. install nfs server on the master:
    * sudo yum -y install nfs-utils nfs-utils-lib
    * sudo mkdir -p /nfs
    * sudo chown -R ec2-user:ec2-user /nfs
    * echo "/nfs <subnet_prefixes>(rw,sync,no_subtree_check)" | sudo tee -a /etc/exports > /dev/null
    * sudo exportfs -r
    * sudo systemctl start nfs-server.service
    * sudo systemctl enable nfs-server.service





Kubeadm:
-------
1. install kubeadm on all hosts:
sudo modprobe br_netfilter
lsmod | grep br_netfilter

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF

sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

sudo systemctl enable --now kubelet

sudo amazon-linux-extras enable docker
sudo yum -y install docker
sudo systemctl start docker
sudo systemctl enable docker.service
sudo systemctl enable containerd.service
sudo usermod -aG docker $USER
newgrp docker

sudo mkdir -p /etc/docker
cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

sudo systemctl enable docker
sudo systemctl daemon-reload
sudo systemctl restart docker

2. on master:
sudo kubeadm init --apiserver-cert-extra-sans=35.87.46.207

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

3. on worker: example
sudo kubeadm join 172.31.22.43:6443 --token ge1zlc.wesqnocr1lasuay9 --discovery-token-ca-cert-hash sha256:36c1c3f51802ec8e6eb19f196c82a567356d13c7645e5013cecadc3948b6b3c1