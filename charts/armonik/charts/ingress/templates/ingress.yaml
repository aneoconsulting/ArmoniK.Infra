apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: armonik
    service: ingress
  name: ingress
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: {{ .Values.ingress.progressDeadlineSeconds }}
  replicas: {{ .Values.ingress.replicaCount }}
  revisionHistoryLimit: {{ .Values.ingress.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: "armonik"
      service: "ingress"
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.ingress.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.ingress.strategy.rollingUpdate.maxUnavailable }}
    type: {{ .Values.ingress.strategy.type }}
  template:
    metadata:
      labels:
        app: "armonik"
        service: "ingress"
      name: ingress
      namespace: {{ .Values.namespace }}
    spec:
      automountServiceAccountToken: true
      containers:
      - envFrom:
        - configMapRef:
            name: ingress-nginx
            optional: false
        image: {{ .Values.ingress.image }}
        imagePullPolicy: {{ .Values.ingress.imagePullPolicy }}
        name: ingress
        ports:
        {{- toYaml .Values.ingress.ports | nindent 8 }}
        {{- if .Values.ingress.resources }}
        resources:
        {{- toYaml .Values.ingress.resources | nindent 10 }}
        {{- end }}
        terminationMessagePath: {{ .Values.ingress.terminationMessagePath}}
        terminationMessagePolicy: {{ .Values.ingress.terminationMessagePolicy}}
        {{- if .Values.ingress.volumes }}
        volumeMounts:
        {{- if .Values.ingress.volumes.ingressSecret }}
        - mountPath: /ingress
          mountPropagation: None
          name: ingress-secret-volume
          readOnly: true
        - mountPath: /ingressclient
          mountPropagation: None
          name: ingress-client-secret-volume
          readOnly: true
        {{- end }}
        {{- if .Values.ingress.volumes.nginxConfigMap }}
        - mountPath: /etc/nginx/conf.d
          mountPropagation: None
          name: ingress-nginx
          readOnly: true
        {{- end }}
        {{- if .Values.ingress.volumes.nginxStaticConfigMap }}
        - mountPath: /static
          mountPropagation: None
          name: static
          readOnly: true
        {{- end }}
##############
        {{- if .Values.ingress.volumes.mongodbSecretCrt }}
        - name: mongodb
          mountPath: /mongodb/certs/
          readOnly: true
          recursiveReadOnly: Disabled
        {{- end }}
        {{- if .Values.ingress.volumes.mongodbSecret }}
        - name: mongodb-ca
          mountPath: /mongodb/certificate/
          readOnly: true
          recursiveReadOnly: Disabled
        {{- end }}
        {{- end}}
##############
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      #nodeSelector:
      #  service: control-plane
      restartPolicy: {{ .Values.ingress.restartPolicy }}
      schedulerName: {{ .Values.ingress.schedulerName }}
      shareProcessNamespace: {{ .Values.ingress.shareProcessNamespace }}
      terminationGracePeriodSeconds: {{ .Values.ingress.terminationGracePeriodSeconds }}
      tolerations:
      {{- toYaml .Values.ingress.tolerations | nindent 8 }}
      {{- if .Values.ingress.volumes }}
      volumes:
      {{- if .Values.ingress.volumes.ingressSecret }}
      - name: ingress-secret-volume
        secret:
          defaultMode: 420
          optional: false
          secretName: {{ .Values.ingress.volumes.ingressSecret }}
      - name: ingress-client-secret-volume
        secret:
          defaultMode: 420
          optional: false
          secretName: {{ .Values.ingress.volumes.ingressSecret }}
      {{- end}}
      {{- if .Values.ingress.volumes.mongodbSecretCrt }}
      - name: mongodb
        secret:
          secretName: {{ .Values.ingress.volumes.mongodbSecretCrt }}
          defaultMode: 420
      {{- end}}
      {{- if .Values.ingress.volumes.mongodbSecret }}
      - name: mongodb-ca
        secret:
          secretName: {{ .Values.ingress.volumes.mongodbSecret }}
          defaultMode: 420
      {{- end}}
      {{- if .Values.ingress.volumes.nginxConfigMap }}
      - configMap:
          defaultMode: 420
          name: {{ .Values.ingress.volumes.nginxConfigMap }}
          optional: false
        name: ingress-nginx
      {{- end}}
      {{- if .Values.ingress.volumes.nginxStaticConfigMap }}
      - configMap:
          defaultMode: 420
          name: {{ .Values.ingress.volumes.nginxStaticConfigMap }}
          optional: false
        name: static
      {{- end}}
      {{- end}}