name: TestMock
description: 'Test for mock integrated worker'
inputs:
  control-plane-image:
    description: 'Repository/image for control plane docker image'
    required: false
    default: 'None'
  control-plane-tag:
    description: 'Tag for control plane docker image'
    required: false
    default: 'None'
  polling-agent-image:
    description: 'Repository/image for polling agent docker image'
    required: false
    default: 'None'
  polling-agent-tag:
    description: 'Tag for polling agent docker image'
    required: false
    default: 'None'
  version:
    description: 'ArmoniK repo version'
    required: false
    default: 'main'

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ inputs.version }}
        submodules: true
        repository: aneoconsulting/ArmoniK

    - name: Install docker
      shell: bash
      run: |
        sh tools/install/docker.sh

    - name: Create HTC Mock worker's docker image
      shell: bash
      run: |
        cd source/ArmoniK.Samples/Samples/HtcMock
        docker build -t dockerhubaneo/armonik_worker_htcmock:0.0.6 -f GridWorker/src/Dockerfile .

    - uses: ./
      name: Run local action
      id: deploy-infra
      with:
        worker-image: dockerhubaneo/armonik_worker_htcmock
        worker-tag: 0.0.6
        docker-is-installed: true
        control-plane-image: ${{ inputs.control-plane-image }}
        control-plane-tag: ${{ inputs.control-plane-tag }}
        polling-agent-image: ${{ inputs.polling-agent-image }}
        polling-agent-tag: ${{ inputs.polling-agent-tag }}

    - name: Test HTC Mock
      shell: bash
      run: |
        export Redis__Password=$(kubectl get secret -n armonik redis-user -o jsonpath="{.data.password}" | base64 --decode)

        set -ex
        $(kubectl get configmap -n armonik worker-configmap -o jsonpath="{.data}" | python -c 'import sys, json; y=json.loads(sys.stdin.read()); l = [f"export {k}={v}" for k,v in y.items()]; print("\n".join(l))')
        export Redis__CaPath=${{ steps.deploy-infra.outputs.credentials-redis-ca-pem }}

        cd source/ArmoniK.Samples/Samples/HtcMock/Client/src/
        dotnet build "ArmoniK.Samples.HtcMock.Client.csproj" -c Release
        dotnet bin/Release/net5.0/ArmoniK.Samples.HtcMock.Client.dll

    - name: Copy logs
      shell: bash
      if: always()
      run: |
        set -e
        mkdir -p /tmp/armoniklogs
        sudo cp -rL /var/log/pods/armonik_* /tmp/armoniklogs
        sudo chown $USER -R /tmp/armoniklogs
        find /tmp/armoniklogs -name "*.log"

    - name: Store logs
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: Logs Mock
        path: /tmp/armoniklogs/**/*.log
        retention-days: 5