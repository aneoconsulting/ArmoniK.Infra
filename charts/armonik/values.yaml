############################################
################## GLOBAL ##################
############################################
global:
  namespace: "armonik"
  registry: "dockerhubaneo"

############################################
### ARMONIK APPLICATION CONFIGURATION #####
############################################
control-plane:
  enabled: false
  nodeSelector: {"control-plane"}
compute-plane:
  enabled: false
  nodeSelector: {"workers"}

############################################
############### DEPENDENCIES ###############
############################################

################## ENICONFIG ###############
eniconfig:
  enabled: false

################## MINIO-S3 ################
minio:
  enabled: false

################## REDIS ##################
redis:
  enabled: true
  useStatefulSet: true
  replica:
    replicaCount: 1
  fullnameOverride: "redis"
  tls:
    enabled: false
    autoGenerated: false
    authClients: no
    pemChainIncluded: true
    existingSecret: redis-crt
    certFilename: "tls-combined.pem"
    certKeyFilename: "tls.key"
    certCAFilename: "ca.crt"
  usernames:
    admin: admin
  master:
    containerPorts:
      redis: 6379

################## ACTIVEMQ ##################
activemq:
  enabled: true
  replicas: 1
  fullnameOverride: "activemq"

################## MONGODB ##################
mongodb:
  enabled: true
  architecture: "replicaset"
  fullnameOverride: "mongodb"
  useStatefulSet: true
  #existingConfigmap: "mongodb-armonik-scripts"
  nodeSelector: 
    service: "state-database"
  tolerations:
    - key: "service"
      operator: "Equal"
      value: "state-database"
      effect: "NoSchedule"
  tls:
    enabled: true
    autoGenerated: true
    replicaset:
      existingSecret: mongodb-crt

################## RABBITMQ ##################
rabbitmq:
  enabled: false
  fullnameOverride: "rabbitmq"

################## TERMINATION- ##################
termination-handler:
  enabled: false

################## EFS-CSI ##################
efs-csi-driver:
  enabled: false

################## CHAOS-MASH ##################
chaos-mesh:
  enabled: false

################## KEDA ##################
keda:
  enabled: true
  certificates:
    certManager:
      enabled: true
      issuer: {"generate":false,"group":"cert-manager.io ","kind":"ClusterIssuer","name":"armonik-selfsigned-issuer"}
  #nodeSelector: {monitoring}

################## NODE-EXPORTER ##################
node-exporter:
  enabled: true
  fullnameOverride: "node-exporter"

################## METRICS-SERVER ##################
metrics-server:
  enabled: true
  fullnameOverride: "metrics-server"
  nodeSelector: {"monitoring"}

################## CLUSTER-AUTOSCALER ##################
cluster-autoscaler:
  enabled: false

################## CERT-MANAGER ##################
cert-manager:
  enabled: true
  installCRDs: true
  fullnameOverride: "cert-manager"

################## GRAFANA ##################
grafana:
  enabled: true
  nodeSelector: {"monitoring"}
  fullnameOverride: "grafana"
  ingress:
    enabled: true
    hosts: 
    - grafana.local
  grafana.ini:
      server:
        domain: localhost
        root_url: http://grafana.{{ .Release.Namespace }}.svc.cluster.local
        serve_from_sub_path: false
      anonymous:
        enabled: true
  createconfigmap: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  sidecar:
    dashboards:
      enabled: true
      searchNamespace: 'armonik'
      label: grafana_dashboard
    datasources:
      enabled: true
      searchNamespace: 'armonik'
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        orgId: 1
        url: http://prometheus-server.{{ .Release.Namespace }}.svc.cluster.local
        isDefault: true
        jsonData:
          tlsSkipVerify: true
        version: 1

################## FLUENT-BIT ##################
fluent-bit:
  enabled: true
  fullnameOverride: "fluent-bit"
  metrics.enabled: true
  ingress:
    enabled: true
    selfSigned: true
    tls: true

################## SEQ ##################
seq:
  enabled: true
  fullnameOverride: "seq"
  image:
    tag: "2024.3"
  nodeSelector: {"monitoring"}

################## INGRESS ##################
ingress:
  enabled: true
  nodeSelector: {"control-plane"}

################## PROMETHEUS ##################
prometheus:
  enabled: true
  clusterDomain: cluster.local
  nodeSelector: {"metrics"}
  fullnameOverride: "prometheus"
  datasources:
    secretDefinition:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        orgId: 1
        url: https://server.prometheus.local/ 
        isDefault: true
        jsonData:
          tlsSkipVerify: true
        version: 1
  alertmanager:
    enabled: false
  kubeStateMetrics:
    enabled: true
  nodeExporter:
    enabled: true
  server:
    ingress:
      enabled: true
      tls: true
      selfSigned: true
    service:
      type: ClusterIP
      port: 9090
    containerPorts:
      http: 9090
    scrapeInterval: 10s
    evaluationInterval: 30s
    extraScrapeConfigs:
      - job_name: "metrics-exporter"
        static_configs:
          - targets: ["metrics-exporter.{{ .Release.Namespace }}.svc.cluster.local:9419"]
            labels:
              namespace: "armonik"
              
      - job_name: "mongodb-metrics-exporter"
        static_configs: 
          - targets: ["mongodb.{{ .Release.Namespace }}.svc.cluster.local:27017"]
            labels:
              namespace: "armonik"
        metrics_path: /metrics
        scheme: http

      - job_name: "kubernetes-apiservers"
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: kubernetes_pod_node_name

      - job_name: "kubernetes-pods"
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: kubernetes_pod_node_name

      - job_name: "kubernetes-cadvisor"
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        metrics_path: /metrics/cadvisor
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      - job_name: "kubernetes-resource"
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        metrics_path: /metrics/resource
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      - job_name: "kubernetes-probes"
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        metrics_path: /metrics/probes
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      - job_name: 'metrics-control-plane' 
        kubernetes_sd_configs:
          - role: pod 
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            action: keep
            regex: "1081" 
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: "armonik"
          - source_labels: [__meta_kubernetes_pod_label_service]
            action: keep
            regex: "control-plane"
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: kubernetes_pod_node_name
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      - job_name: 'metrics-polling-agent' 
        kubernetes_sd_configs:
          - role: pod 
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            action: keep
            regex: "1080" 
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: "armonik"
          - source_labels: [__meta_kubernetes_pod_label_service]
            action: keep
            regex: "compute-plane"
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: kubernetes_pod_node_name
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

############################################